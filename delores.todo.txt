
# Delores Thougths 
* I want to be able to link up the timer, the log, and delores.  Much closer.  
* Possibly I can literally import options using a vim macro. Like, I'd have a set of keys for 'expand this' and for 'tick cross' 
  * With vim syntax highlighting 
  * Sounds like yet again I want to port it to a new place. 
    * Which would definitely not work for paper
* Paper is a good thing 
* I miss the 'problem' option


--------
Okay let's get this meta file sorted 


* Still needs to cope with loops 
* Weekly thing to backup the old cookies. 
* Absolutely needs a 'why NOT' option 
# Content 
(E) Add a timer function to individual steps.
(E) Add meta process 'if you want to change delores, it goes into the list. 
(E) Inline the smallest page 

      11 process_inbox.md
      14 clean_slate.md
      14 email.md
      14 morning.md
      16 process_calendar.md
      22 packinglists.md
      28 clean_kitchen.md
      28 emotionalproblem.md
      36 nonononono.md
      41 listitem.md
     110 index.md
     335 total


What are the rules for content? 
* Each item can't have a minimum time - because then you wouldn't put some in the list. 
* Each item also can't have a maximum time - because some things are long. 
* So time isn't a factor. It's the simple 'What's next' of the day. 


# The parser process. 
Here's what I want: 

I want to be able to use Delores to successful get through a whole day.  I want that day to include a simple way adapting delores.  

I want the delores code to be fun to use, with sound effects and timers and a general gaming vibe. 
  * Also the if and while commands should be effective 
    * Which means a count on some of the symbols 
I want to be able to compare days from one to another. 
  * As the code gets more structured, then the content will follow suit. 




# Code todos 
(E) Create a help overview 



## 07/07/22 10:31 to 12:53, Let's have some Delores code.  +EQT

# Project stack 
* Cookies. 
  * Multiple pages, multiple days. 
* A count for loops 
* Redo the design. 
* Full reset button. 
* Sound effect for yeses 
* Timers (and key to update)  
* Yes and No should work differently on "IF" and "While" statements and indeed, shouldn't count as scored. 
* Extract the javascript files. 
* Work out why it doesn't work with subpages
* Work out why the yellow 'cursor' isn't consistent between pages
* Have the logic be extirely seperate from the view - possibly with a complier - so it might end up in another language next time I get board
* Brainstorm what it would need to make this a releasable product. 
  * Hmmm What would I want to be able to replace this? 
    * Still web. 
    * Out of Jekyll I think - JUST a markdown compiler 
    * Editable in Vim - I want to be able to open a markdown file. 
    * Ability to use Javascript to do complex things 
    * Working IF and While. 
    * Can I JUST  write a compiler? In Python? That produces a json file that the Javascript reads?  
      * What happens if we do that? 
      * So I think the plan is to do a test driven bit of development that creates a python compiler into json alongside a javascript module to interpret it. 



Delores and the code for delores 
* Timer for how long each one took. 
